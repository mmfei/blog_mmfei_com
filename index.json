[{"categories":["centos","deploy","gitlab","docker"],"content":"docker-compose.yml version:'3'services:gitlab.abc.com:container_name:gitlab.abc.comimage:gitlab/gitlab-ce:latest# image: gitlab/gitlab-ce:11.0.1-ce.0restart:alwaysprivileged:trueenvironment:GITLAB_OMNIBUS_CONFIG:|external_url 'https://gitlab.abc.com' gitlab_rails['time_zone'] = 'Asia/Shanghai' nginx['enable'] = false gitlab_workhorse['listen_network'] = \"tcp\" gitlab_workhorse['listen_addr'] = \":19900\" gitlab_rails['gitlab_shell_ssh_port'] = 19901ports:- \"19900:19900\"- \"19901:22\"- \"19091:9090\"volumes:- \"./ssl:/etc/gitlab/ssl\"- \"/data/gitlab.abc.com/config:/etc/gitlab:rw\"- \"/data/gitlab.abc.com/logs:/var/log/gitlab:rw\"- \"/data/gitlab.abc.com/data:/var/opt/gitlab:rw\"- \"/data/gitlab.abc.com/backups:/var/opt/gitlab/backups:rw\"gitlab-runner:restart:alwaysimage:gitlab/gitlab-runnerdepends_on:- gitlab.abc.comvolumes:- /data/gitlab/gitlab-runner/config:/etc/gitlab-runner:Z- /var/run/docker.sock:/var/run/docker.sockenvironment:- TZ=Asia/Shanghai yum install -y yum-utils yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum -y remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotat docker-engine yum -y install docker-ce docker-ce-cli containerd.io systemctl start docker curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/bin/docker-compose chmod +x /usr/bin/docker-compose mkdir -p /data/gitlab.abc.com/{logs,config,data,backups} mkdir -p ./ssl curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash yum install gitlab-runner gitlab-runner register ","date":"2021-05-29","objectID":"/2021/05/centos%E6%90%AD%E5%BB%BAgitlab%E5%92%8Cgitlab-runner/:1:0","tags":["centos","docker","gitlab","docker-compose","gitlab-runner"],"title":"Centos8搭建gitlab和gitlab-Runner","uri":"/2021/05/centos%E6%90%AD%E5%BB%BAgitlab%E5%92%8Cgitlab-runner/"},{"categories":["centos","deploy","gitlab","docker"],"content":"配置本地的nginx服务器 # gitlab.abc.com.conf upstream gitlab{ # 域名对应 docker宿主机域名 # 端口对应 docker宿主机映射域名 server 127.0.0.1:19900; } server { listen 80; server_name gitlab.abc.com; rewrite ^(.*)$ https://${server_name}$1 permanent; } server { proxy_headers_hash_max_size 51200; proxy_headers_hash_bucket_size 6400; proxy_ssl_server_name on; proxy_ssl_name gitlab.abc.com; listen 443 ssl; server_name gitlab.abc.com; access_log /data/nginx/gitlab.abc.com/access_$logdate.log; error_log /data/nginx/gitlab.abc.com/error.log; ssl_session_cache shared:SSL:1m; ssl_certificate pem/gitlab.abc.com/cert.pem; # pem文件的路径 ssl_certificate_key pem/gitlab.abc.com/key.pem; # key文件的路径 ssl_session_timeout 5m; #缓存有效期 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; #加密算法 ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #安全链接可选的加密协议 ssl_prefer_server_ciphers on; #使用服务器端的首选算法 location / { proxy_pass http://gitlab; proxy_http_version 1.1; proxy_set_header X_FORWARDED_PROTO https; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $host; } location ~ .*\\.(js|css|png)$ { proxy_pass http://gitlab; } } ","date":"2021-05-29","objectID":"/2021/05/centos%E6%90%AD%E5%BB%BAgitlab%E5%92%8Cgitlab-runner/:2:0","tags":["centos","docker","gitlab","docker-compose","gitlab-runner"],"title":"Centos8搭建gitlab和gitlab-Runner","uri":"/2021/05/centos%E6%90%AD%E5%BB%BAgitlab%E5%92%8Cgitlab-runner/"},{"categories":["macbook","mamp","swoole","hyperf","php"],"content":"这是一个在macbook环境下 , 用MAMP套件的小伙伴 , 如何安装一个yasd扩展进行调试 ","date":"2021-05-28","objectID":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/:0:0","tags":["macbook","mamp","swoole","hyperf","php"],"title":"MacbookMAMP套件安装yasd扩展调试swoole和hyperf代码","uri":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/"},{"categories":["macbook","mamp","swoole","hyperf","php"],"content":"步骤 下载yasd 编译yasd 配置php.ini ","date":"2021-05-28","objectID":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/:1:0","tags":["macbook","mamp","swoole","hyperf","php"],"title":"MacbookMAMP套件安装yasd扩展调试swoole和hyperf代码","uri":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/"},{"categories":["macbook","mamp","swoole","hyperf","php"],"content":"安装yasd扩展 debug是在本机debug , 端口是9001 # 这是debug的端口,换端口可以改这个9001 export DEBUG_PORT=9001 # 这是debug的host,127.0.0.1表示php所在的机器在debug , 一般来说开发都是在本地调试的,用127.0.0.1就好 export DEBUG_IP=127.0.0.1 brew install boost git clone https://github.com/swoole/yasd.git; cd yasd; phpize --clean \u0026\u0026 phpize ./configure make clean \u0026\u0026 make \u0026\u0026 make install export PHP_INI=`php -i | grep \"conf/php.ini\" | awk '{print $5}'`; echo '[xdebug]' \u003e\u003e $PHP_INI echo 'zend_extension=yasd' \u003e\u003e $PHP_INI echo 'yasd.debug_mode=remote' \u003e\u003e $PHP_INI echo 'yasd.remote_host='.$DEBUG_IP \u003e\u003e $PHP_INI echo 'yasd.remote_port='.$DEBUG_PORT \u003e\u003e $PHP_INI ","date":"2021-05-28","objectID":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/:2:0","tags":["macbook","mamp","swoole","hyperf","php"],"title":"MacbookMAMP套件安装yasd扩展调试swoole和hyperf代码","uri":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/"},{"categories":["macbook","mamp","swoole","hyperf","php"],"content":"phpstorm配置 对应端口改9001 ","date":"2021-05-28","objectID":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/:3:0","tags":["macbook","mamp","swoole","hyperf","php"],"title":"MacbookMAMP套件安装yasd扩展调试swoole和hyperf代码","uri":"/2021/05/macbookmamp%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%85yasd%E6%89%A9%E5%B1%95%E8%B0%83%E8%AF%95swoole%E5%92%8Chyperf%E4%BB%A3%E7%A0%81/"},{"categories":["deploy","aliyun","hyperf"],"content":"服务需要用到 免密登录配置 openresty php7 swoole nginx config gitlab runner gitlab ci php-redis扩展 ","date":"2021-05-28","objectID":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/:0:1","tags":["aliyun","centos","oss","hyperf","deploy","phpredis"],"title":"阿里云从零开始搭建hyperf服务器","uri":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["deploy","aliyun","hyperf"],"content":"一些约定 编译的源码目录 /data/src/install/{包名}/{src/,*.tag.gz} 网站目录 /data/src/web/{域名} 服务器说明 /root/README.md 服务器部署说明 /root/README.install.md 软件安装目录 /usr/local/软件名-版本号 , 并创建一个软链接到 /usr/local/软件名 ","date":"2021-05-28","objectID":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/:0:2","tags":["aliyun","centos","oss","hyperf","deploy","phpredis"],"title":"阿里云从零开始搭建hyperf服务器","uri":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["deploy","aliyun","hyperf"],"content":"下载安装脚本(直接运行即可) centos8_install_openresty_swoole_server.sh ","date":"2021-05-28","objectID":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/:0:3","tags":["aliyun","centos","oss","hyperf","deploy","phpredis"],"title":"阿里云从零开始搭建hyperf服务器","uri":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["deploy","aliyun","hyperf"],"content":"安装说明 软件 路径 源码 备注 openresty /usr/local/openresty/bin/php /usr/local/openresty systemctl restart openresty php /usr/local/php/bin/php /usr/local/php /data/src/install/php-7.4.19 免密登录配置 ## 在服务器上执行, 下次就可以不输入密码登录 echo \"你自己笔记本或者电脑的`cat ~/.ssh/id_rsa.pub`内容\" \u003e\u003e ~/.ssh/authorized_keys; openresty wget https://openresty.org/package/centos/openresty.repo -O /etc/yum.repos.d/openresty.repo yum check-update yum install -y openresty systemctl start openresty systemctl enable openresty ls -al /usr/local/openresty/ ls -al /usr/local/openresty/nginx/sbin PHP源码编译安装 yum install -y libxml2-devel krb5-devel openssl-devel sqlite-devel libcurl-devel libxslt-devel libjpeg-devel libzip-devel bzip2-devel libpng-devel freetype-devel autoconf automake libtool export ONIGURUMA_VERSION=6.9.4 mkdir -p /data/src/install/oniguruma-$ONIGURUMA_VERSION cd /data/src/install/oniguruma-$ONIGURUMA_VERSION wget -c https://github.com/kkos/oniguruma/archive/v$ONIGURUMA_VERSION.tar.gz -O oniguruma-$ONIGURUMA_VERSION.tar.gz tar xvzf oniguruma-$ONIGURUMA_VERSION.tar.gz; cd oniguruma-$ONIGURUMA_VERSION; ./autogen.sh \u0026\u0026 ./configure --prefix=/usr make \u0026\u0026 make install # install php export PHP_VERSION=7.4.19 mkdir -p /data/src/install/php-$PHP_VERSION cd /data/src/install/php-$PHP_VERSION wget -c https://www.php.net/distributions/php-$PHP_VERSION.tar.gz --no-check-certificate; tar xvzf php-$PHP_VERSION.tar.gz; cd /data/src/install/php-$PHP_VERSION/php-$PHP_VERSION; ./configure --prefix=/usr/local/php-$PHP_VERSION --with-curl --with-freetype --enable-gd --with-jpeg --with-gettext --with-iconv-dir=/usr/local --with-kerberos --with-libdir=lib64 --with-libxml --with-mysqli --with-openssl --with-pdo-mysql --with-pdo-sqlite --with-pear --enable-sockets --with-mhash --with-ldap-sasl --with-xmlrpc --with-xsl --with-zlib --enable-fpm --enable-bcmath --enable-inline-optimization --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml --with-zip --with-config-file-path=/usr/local/php-$PHP_VERSION/etc -with-bz2 --enable-inline-optimization --enable-sysvsem make \u0026\u0026 make install cp php.ini-production /usr/local/php-$PHP_VERSION/etc/php.ini cp /usr/local/php-$PHP_VERSION/etc/php-fpm.conf.default /usr/local/php-$PHP_VERSION/etc/php-fpm.d/www.conf ln -s /usr/local/php-$PHP_VERSION /usr/local/php /usr/local/php/bin/php -v /usr/local/php-$PHP_VERSION/bin/php -v echo 'pathmunge /usr/local/php/bin' \u003e\u003e /etc/profile.d/php.sh # install php-redis export PHPREDIS_VERSION=5.3.4 mkdir -p /data/src/install/phpredis-$PHPREDIS_VERSION cd /data/src/install/phpredis-$PHPREDIS_VERSION wget https://github.com/phpredis/phpredis/archive/refs/tags/$PHPREDIS_VERSION.tar.gz --no-check-certificate -O phpredis-$PHPREDIS_VERSION.tar.gz; tar xvzf phpredis-$PHPREDIS_VERSION.tar.gz cd phpredis-$PHPREDIS_VERSION /usr/local/php/bin/phpize ./configure --with-php-config=/usr/local/php/bin/php-config make \u0026\u0026 make install echo 'extension=\"redis.so\"' \u003e\u003e /usr/local/php/etc/php.ini php -m | grep redis swoole yum install -y glibc-headers gcc-c++ export SWOOLE_VERSION=4.6.7 mkdir -p /data/src/install/swoole-$SWOOLE_VERSION cd /data/src/install/swoole-$SWOOLE_VERSION wget -c https://pecl.php.net/get/swoole-$SWOOLE_VERSION.tgz -O /data/src/install/swoole-$SWOOLE_VERSION/swoole-$SWOOLE_VERSION.tgz --no-check-certificate tar -zvxf swoole-$SWOOLE_VERSION.tgz cd swoole-$SWOOLE_VERSION /usr/local/php/bin/phpize ./configure --with-php-config=/usr/local/php/bin/php-config --enable-openssl --enable-http2 --enable-swoole-json --enable-swoole-curl make \u0026\u0026 make install echo 'extension=\"swoole.so\"' \u003e\u003e /usr/local/php/etc/php.ini echo 'swoole.use_shortname = off' \u003e\u003e /usr/local/php/etc/php.ini php -m | grep swoole nginx config gitlab runner gitlab ci ","date":"2021-05-28","objectID":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/:0:4","tags":["aliyun","centos","oss","hyperf","deploy","phpredis"],"title":"阿里云从零开始搭建hyperf服务器","uri":"/2021/05/%E9%98%BF%E9%87%8C%E4%BA%91%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAhyperf%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"categories":["blog"],"content":"配图工具 一篇文章如果是存文字 , 感官会差很多 . 有个高质量的图片会让枯燥的博文增色不少. ","date":"2021-05-28","objectID":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/:1:0","tags":["博客","工具"],"title":"推荐写博客的在线工具","uri":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"categories":["blog"],"content":"这是一个很方便的在线配图工具,点赞啊 http://placeimg.com/ 这里使用的图片链接 http://placeimg.com/800/250/any ","date":"2021-05-28","objectID":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/:1:1","tags":["博客","工具"],"title":"推荐写博客的在线工具","uri":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"categories":["blog"],"content":"颜色选择器 你是不是在苦恼配色? 用这个试试 , 有类似色给你选 https://htmlcolorcodes.com/zh/yanse-xuanze-qi/ ","date":"2021-05-28","objectID":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/:2:0","tags":["博客","工具"],"title":"推荐写博客的在线工具","uri":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"categories":["blog"],"content":"在线favicon工具 ","date":"2021-05-28","objectID":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/:3:0","tags":["博客","工具"],"title":"推荐写博客的在线工具","uri":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"categories":["blog"],"content":"一个站点需要一些基础的logo,例如favicon , 头像 , 首页logo等一套图片 , 这个站点就是一个很好的解决方案 https://realfavicongenerator.net/ ","date":"2021-05-28","objectID":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/:3:1","tags":["博客","工具"],"title":"推荐写博客的在线工具","uri":"/2021/05/%E6%8E%A8%E8%8D%90%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"categories":["deploy","gitlab"],"content":"通过gitlab的ci自动部署前端项目到阿里云的oss ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:1:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"gitlab-ci.yml # 指定使用的镜像image:node:latest# 执行步骤，依次执行stages:- install- build- deploy# 安装依赖 job 下面的 stage 字段和 stages 下面的步骤一一对应install-job:dep:stage:installcache:paths:- node_modules/only:# 限定执行脚本的条件，only 支持 branch、tag、change、正则- master- develop- masterscript:# 此 stage 要执行的脚本- npm iartifacts:# 将这个job生成的依赖传递给下一个job。需要设置dependenciesexpire_in:60mins # artifacets 的过期时间，因为这些数据都是直接保存在 Gitlab 机器上的，过于久远的资源就可以删除掉了paths:# 需要被传递给下一个job的目录。- node_modules/# 打包build-job:dep:stage:buildonly:- master- develop- masterscript:- npm run buildartifacts:# 将这个job生成的依赖传递给下一个job。需要设置dependenciesexpire_in:60mins # artifacets 的过期时间，因为这些数据都是直接保存在 Gitlab 机器上的，过于久远的资源就可以删除掉了paths:# 需要被传递给下一个job的目录。- node_modules/# 上传到服务器deploy-job:dep:stage:deployonly:- master- develop- masterscript:- |npm run deploy ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:1:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"在gitlab-runner机器 ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:2:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"安装runner(docker的方式) docker run -d --name gitlab-share-runner --restart always -v /data/gitlab-runner/config:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock gitlab/gitlab-runner:latest //启动一个容器 docker exec -it gitlab-share-runner gitlab-runner register //注册到Gtilab ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:2:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"安装runner的第二种方式(centos直接安装 , 我选用这种) yum install gitlab-runner ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:2:2","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"安装阿里云的oss命令行工具 cd /your_workspace/ npm install aliyunoss-cli --save-dev ossutils config #配置阿里云的oss配置 ,会生成.ossconfig在工程目录下 , 需要阿里云的AccessKey ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:2:3","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":".ossconfig { \"region\": \"-\", \"accessKeyId\": \"-\", \"accessKeySecret\": \"-\", \"bucket\": \"-\" } ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:2:4","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"配置script,配合gitlab-ci执行打包上传命令 ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:3:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["deploy","gitlab"],"content":"package.json { \"scripts\": { \"deploy\": \"npx aliyunoss-cli --releaseEnv dev\", \"publish\": \"npm i \u0026\u0026 npm run build \u0026\u0026 npm run deploy\" } } ","date":"2021-05-27","objectID":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/:3:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"通过gitlab的ci自动部署前端项目到阿里云的oss","uri":"/2021/05/%E9%80%9A%E8%BF%87gitlab%E7%9A%84ci%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E7%9A%84oss/"},{"categories":["linux"],"content":"如何升级centos的内核版本 rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm # list all kernel yum --disablerepo=\"*\" --enablerepo=\"elrepo-kernel\" list # use newest kernel yum --enablerepo=elrepo-kernel -y install kernel-ml kernel-ml-devel # or use a normal kernel yum --enablerepo=elrepo-kernel -y install kernel-lt kernel-lt-devel # list all kernel can use awk -F\\' '$1==\"menuentry \" {print i++ \" : \" $2}' /etc/grub2.cfg # set boot kernel grub2-set-default 0 # let grub run grub2-mkconfig -o /boot/grub2/grub.cfg # reboot reboot; # clean older kernel # list rpm -qa | grep kernel # remove older kernal rmp # yum remove kernel-tools-3.10.0-957.el7.x86_64 kernel-headers-3.10.0-1062.12.1.el7.x86_64 kernel-3.10.0-957.el7.x86_64 kernel-debug-devel-3.10.0-1062.12.1.el7.x86_64 kernel-tools-libs-3.10.0-957.el7.x86_64 ","date":"2021-05-26","objectID":"/2021/05/%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7centos%E7%9A%84%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC/:1:0","tags":["linux","kernel","centos"],"title":"如何升级centos的内核版本","uri":"/2021/05/%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7centos%E7%9A%84%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC/"},{"categories":["install"],"content":"install in centos #!/bin/sh URL=https://github.com/sharkdp/bat/releases/download/v0.18.1/bat-v0.18.1-x86_64-unknown-linux-musl.tar.gz wget -c -O bat.tar.gz $URL; tar -xvzf bat.tar.gz -C /usr/local; ln -s /usr/local/bat-v0.18.1-x86_64-unknown-linux-musl/bat /usr/local/bin/bat ","date":"2021-05-26","objectID":"/2021/05/centos_install_bat_a_better_cat/:1:0","tags":["centos","bat"],"title":"Centos_install_bat_a_better_cat","uri":"/2021/05/centos_install_bat_a_better_cat/"},{"categories":["hugo"],"content":"mermaidjs是一个优秀的绘图的js库 , 支持流程图 , 时序图 , 类图 , 状态图等功能. 把它引入到hugo模板 , 写技术方案特别方便. ","date":"2021-05-26","objectID":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/:0:0","tags":["hugo","theme","mermaid"],"title":"hugo增加mermaidjs的支持","uri":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/"},{"categories":["hugo"],"content":"它的在线编辑器 https://mermaid-js.github.io/mermaid-live-editor/ ","date":"2021-05-26","objectID":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/:1:0","tags":["hugo","theme","mermaid"],"title":"hugo增加mermaidjs的支持","uri":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/"},{"categories":["hugo"],"content":"步骤 修改模板 head.html (底部追加内容) \u003c!-- file layouts/partials/head.html --\u003e {{ if .Params.mermaid }} \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.9.3/mermaid.min.js\" integrity=\"sha512-kxc8+BGu0/ESUMiK6Q/goKwwcoIoFVcXZ4GwMoGupMA/qTGx19BcNn1uiebOZO5f85ZD0oTdvlRKdeNh3RTnVg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"\u003e\u003c/script\u003e \u003cscript\u003e // Replace mermaid pre.code to div Array.from(document.getElementsByClassName(\"language-mermaid\")).forEach( (el) =\u003e { el.parentElement.outerHTML = `\u003cdiv class=\"mermaid\"\u003e${el.innerText}\u003c/div\u003e`; } ); \u003c/script\u003e \u003cstyle\u003e /* Set svg to center */ .mermaid svg { display: block; margin: auto; } \u003c/style\u003e {{ end }} 文章增加配置 ---mermaid:true--- ","date":"2021-05-26","objectID":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/:2:0","tags":["hugo","theme","mermaid"],"title":"hugo增加mermaidjs的支持","uri":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/"},{"categories":["hugo"],"content":"test %%{init: {'theme': 'forest', 'fill': 'white', 'securitylevel': 'loose' } }%% sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! %%{init: {'theme': 'forest', 'fill': 'white' } }%% sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; sequenceDiagram 产品-\u003e\u003e+后端: 接需求 后端-\u003e\u003e+前端: 提交联调(本地自测完毕) [develop-\u003efeature) 前端--\u003e\u003e-后端: 完成对接(在测试环境) [feature-\u003etest] 后端--\u003e\u003e-测试: 提测(在测试环境) [feature-\u003etest] 测试--\u003e\u003e+产品: 验收 (在预发布环境) [feature-\u003edevelop-\u003emaster] 产品-\u003e\u003e+上线: 上线(本地自测完毕) [master] sequenceDiagram 产品-\u003e\u003e+后端: 接需求 后端-\u003e\u003e+前端: 提交联调(本地自测完毕) [develop-\u003efeature) 前端--\u003e\u003e-后端: 完成对接(在测试环境) [feature-\u003etest] 后端--\u003e\u003e-测试: 提测(在测试环境) [feature-\u003etest] 测试--\u003e\u003e+产品: 验收 (在预发布环境) [feature-\u003edevelop-\u003emaster] 产品-\u003e\u003e+上线: 上线(本地自测完毕) [master] classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } ","date":"2021-05-26","objectID":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/:2:1","tags":["hugo","theme","mermaid"],"title":"hugo增加mermaidjs的支持","uri":"/2021/05/hugo%E5%A2%9E%E5%8A%A0mermaidjs%E7%9A%84%E6%94%AF%E6%8C%81/"},{"categories":["hugo","github","github action"],"content":"如何使用hugo快速创建一个github page 创建github项目(私有项目 + 公开项目) github.com/mmfei/mmfei.github.io.source; # 源项目 主要是用来生成网站项目 , 私有 github.com/mmfei/mmfei.github.io; # 网站项目 用来做 github page 的网站目录 # 安装hugo (mac环境下的安装方式 , 其他环境请看 gohugo.io) brew install hugo; # clone 私有项目 git clone github.com/mmfei/mmfei.github.io.source; cd mmfei.github.io.source; hugo new site .; hugo new post/first.md; # 往里面填充点内容 # 修改文件 config.tom cat config.tom \u003c\u003cEOT theme = \"beautifulhugo\" EOT # 修改文件 config.toml cat config.toml \u003c\u003cEOT baseURL = \"https://mmfei.github.io/\" languageCode = \"en-us\" title = \"木木飞\" theme = \"beautifulhugo\" EOT git add *; git commit -m \"commit_message\"; git push origin master; 创建本人在github的token(作为 GH_TOKEN 的值) https://github.com/settings/tokens 创建TOKEN (MY_GH_TOKEN) (需要赋予写仓库的权限,这个token是要给mmfei.github.io.source项目生成mmfei.github.io文件用的) https://github.com/mmfei/mmfei.github.io/settings/secrets/actions 设置page https://github.com/mmfei/mmfei.github.io/settings/pages 生成部署相关的公私钥 , 用来从 mmfei.github.io.source 发布 内容到 mmfei.github.io ssh-keygen -t rsa -b 4069 -C \"abc@abc.com\"; # 这里要替换成为你的邮箱地址 , 假设指定生成的文件为 ~/.ssh/id_rs_hugo_deploy.pub , ~/.ssh/id_rs_hugo_deploy ## 下面的 ACTIONS_DEPLOY_KEY 的值 /bin/cat ~/.ssh/id_rs_hugo_deploy.pub; ## 下面的 deploy key 的数值 /bin/cat ~/.ssh/id_rs_hugo_deploy; 设置 mmfei.github.io 项目 https://github.com/mmfei/mmfei.github.io/settings/keys 创建一个deploy key (值是上面的 ~/.ssh/id_rs_hugo_deploy 的内容), 需要写入权限 , 目的是给source项目推内容上来用 ","date":"2021-05-23","objectID":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/:0:1","tags":["hugo","github"],"title":"如何使用hugo快速创建一个github的page","uri":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/"},{"categories":["hugo","github","github action"],"content":"打开源目录的url,设置 ","date":"2021-05-23","objectID":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/:0:2","tags":["hugo","github"],"title":"如何使用hugo快速创建一个github的page","uri":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/"},{"categories":["hugo","github","github action"],"content":"设置 mmfei.github.io.source https://github.com/mmfei/mmfei.github.io.source/settings/secrets/actions 创建两个secret ACTIONS_DEPLOY_KEY 的值为上面生成的pub GH_TOKEN 的值为上面的MY_GH_TOKEN的值 ","date":"2021-05-23","objectID":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/:0:3","tags":["hugo","github"],"title":"如何使用hugo快速创建一个github的page","uri":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/"},{"categories":["hugo","github","github action"],"content":"设置构建脚本 cat \u003e\u003e ./.github/workflows/main.yml \u003c\u003cEOT name: Deploy Hugo Site to Github Pages on Master Branch on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1 # v2 does not have submodules option now # with: # submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"0.62.2\" # extended: true - name: Build run: | git submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo hugo --theme=beautifulhugo ls public - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # 这里的 ACTIONS_DEPLOY_KEY 则是上面设置 Private Key的变量名 github_token: ${{ secrets.GH_TOKEN }} external_repository: mmfei/mmfei.github.io publish_dir: \"./public\" keep_files: false # remove existing files publish_branch: master # deploying branch commit_message: ${{ github.event.head_commit.message }} user_name: \"mmfei\" user_email: \"abc@abc.com\" EOT git add ./.github/workflows/main.yml; git commit -m 'add deploy file'; git push origin master; ","date":"2021-05-23","objectID":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/:0:4","tags":["hugo","github"],"title":"如何使用hugo快速创建一个github的page","uri":"/2021/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAgithub%E7%9A%84page/"},{"categories":null,"content":"一直在广州的互联网老兵 ","date":"2021-05-22","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]