[{"categories":["hugo"],"content":"hugo theme’s config e ","date":"2021-05-27","objectID":"/post/hugo_themes_config/:0:1","tags":["hugo","theme","config"],"title":"Hugo_themes_config","uri":"/post/hugo_themes_config/"},{"categories":["deploy","gitlab"],"content":"通过gitlab的ci自动部署前端项目到阿里云的oss ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:1:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"gitlab-ci.yml # 指定使用的镜像image:node:latest# 执行步骤，依次执行stages:- install- build- deploy# 安装依赖 job 下面的 stage 字段和 stages 下面的步骤一一对应install-job:dep:stage:installcache:paths:- node_modules/only:# 限定执行脚本的条件，only 支持 branch、tag、change、正则- master- develop- masterscript:# 此 stage 要执行的脚本- npm iartifacts:# 将这个job生成的依赖传递给下一个job。需要设置dependenciesexpire_in:60mins # artifacets 的过期时间，因为这些数据都是直接保存在 Gitlab 机器上的，过于久远的资源就可以删除掉了paths:# 需要被传递给下一个job的目录。- node_modules/# 打包build-job:dep:stage:buildonly:- master- develop- masterscript:- npm run buildartifacts:# 将这个job生成的依赖传递给下一个job。需要设置dependenciesexpire_in:60mins # artifacets 的过期时间，因为这些数据都是直接保存在 Gitlab 机器上的，过于久远的资源就可以删除掉了paths:# 需要被传递给下一个job的目录。- node_modules/# 上传到服务器deploy-job:dep:stage:deployonly:- master- develop- masterscript:- |npm run deploy ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:1:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"在gitlab-runner机器 ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:2:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"安装runner(docker的方式) docker run -d --name gitlab-share-runner --restart always -v /data/gitlab-runner/config:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock gitlab/gitlab-runner:latest //启动一个容器 docker exec -it gitlab-share-runner gitlab-runner register //注册到Gtilab ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:2:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"安装runner的第二种方式(centos直接安装 , 我选用这种) yum install gitlab-runner ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:2:2","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"安装阿里云的oss命令行工具 cd /your_workspace/ npm install aliyunoss-cli --save-dev ossutils config #配置阿里云的oss配置 ,会生成.ossconfig在工程目录下 , 需要阿里云的AccessKey ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:2:3","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":".ossconfig { \"region\": \"-\", \"accessKeyId\": \"-\", \"accessKeySecret\": \"-\", \"bucket\": \"-\" } ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:2:4","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"配置script,配合gitlab-ci执行打包上传命令 ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:3:0","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["deploy","gitlab"],"content":"package.json { \"scripts\": { \"deploy\": \"npx aliyunoss-cli --releaseEnv dev\", \"publish\": \"npm i \u0026\u0026 npm run build \u0026\u0026 npm run deploy\" } } ","date":"2021-05-27","objectID":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/:3:1","tags":["aliyun","gitlab","ci","oss","npm","deploy"],"title":"Gitlab_ci_npm_deploy_for_aliyun_oss","uri":"/post/gitlab_ci_npm_deploy_for_aliyun_oss/"},{"categories":["linux"],"content":"如何升级centos的内核版本 rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm # list all kernel yum --disablerepo=\"*\" --enablerepo=\"elrepo-kernel\" list # use newest kernel yum --enablerepo=elrepo-kernel -y install kernel-ml kernel-ml-devel # or use a normal kernel yum --enablerepo=elrepo-kernel -y install kernel-lt kernel-lt-devel # list all kernel can use awk -F\\' '$1==\"menuentry \" {print i++ \" : \" $2}' /etc/grub2.cfg # set boot kernel grub2-set-default 0 # let grub run grub2-mkconfig -o /boot/grub2/grub.cfg # reboot reboot; # clean older kernel # list rpm -qa | grep kernel # remove older kernal rmp # yum remove kernel-tools-3.10.0-957.el7.x86_64 kernel-headers-3.10.0-1062.12.1.el7.x86_64 kernel-3.10.0-957.el7.x86_64 kernel-debug-devel-3.10.0-1062.12.1.el7.x86_64 kernel-tools-libs-3.10.0-957.el7.x86_64 ","date":"2021-05-26","objectID":"/post/centos_kernel_update/:1:0","tags":["linux","kernel","centos"],"title":"Centos_kernal_update","uri":"/post/centos_kernel_update/"},{"categories":["install"],"content":"install in centos #!/bin/sh URL=https://github.com/sharkdp/bat/releases/download/v0.18.1/bat-v0.18.1-x86_64-unknown-linux-musl.tar.gz wget -c -O bat.tar.gz $URL; tar -xvzf bat.tar.gz -C /usr/local; ln -s /usr/local/bat-v0.18.1-x86_64-unknown-linux-musl/bat /usr/local/bin/bat ","date":"2021-05-26","objectID":"/post/centos_install_bat_a_better_cat/:1:0","tags":["centos","bat"],"title":"Centos_install_bat_a_better_cat","uri":"/post/centos_install_bat_a_better_cat/"},{"categories":["hugo"],"content":"hugo 增加mermaid js的支持 mermaidjs是一个优秀的绘图的js库 , 支持流程图 , 时序图 , 类图 , 状态图等功能. 把它引入到hugo模板 , 写技术方案特别方便. ","date":"2021-05-26","objectID":"/post/hugo_support_mermaidjs/:1:0","tags":["hugo","theme","mermaid"],"title":"Hugo_support_mermaidjs","uri":"/post/hugo_support_mermaidjs/"},{"categories":["hugo"],"content":"它的在线编辑器 https://mermaid-js.github.io/mermaid-live-editor/ ","date":"2021-05-26","objectID":"/post/hugo_support_mermaidjs/:2:0","tags":["hugo","theme","mermaid"],"title":"Hugo_support_mermaidjs","uri":"/post/hugo_support_mermaidjs/"},{"categories":["hugo"],"content":"步骤 修改模板 head.html (底部追加内容) \u003c!-- file layouts/partials/head.html --\u003e {{ if .Params.mermaid }} \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.9.3/mermaid.min.js\" integrity=\"sha512-kxc8+BGu0/ESUMiK6Q/goKwwcoIoFVcXZ4GwMoGupMA/qTGx19BcNn1uiebOZO5f85ZD0oTdvlRKdeNh3RTnVg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"\u003e\u003c/script\u003e \u003cscript\u003e // Replace mermaid pre.code to div Array.from(document.getElementsByClassName(\"language-mermaid\")).forEach( (el) =\u003e { el.parentElement.outerHTML = `\u003cdiv class=\"mermaid\"\u003e${el.innerText}\u003c/div\u003e`; } ); \u003c/script\u003e \u003cstyle\u003e /* Set svg to center */ .mermaid svg { display: block; margin: auto; } \u003c/style\u003e {{ end }} 文章增加配置 ---mermaid:true--- ","date":"2021-05-26","objectID":"/post/hugo_support_mermaidjs/:3:0","tags":["hugo","theme","mermaid"],"title":"Hugo_support_mermaidjs","uri":"/post/hugo_support_mermaidjs/"},{"categories":["hugo"],"content":"test %%{init: {'theme': 'forest', 'fill': 'white', 'securitylevel': 'loose' } }%% sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! %%{init: {'theme': 'forest', 'fill': 'white' } }%% sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; sequenceDiagram 产品-\u003e\u003e+后端: 接需求 后端-\u003e\u003e+前端: 提交联调(本地自测完毕) [develop-\u003efeature) 前端--\u003e\u003e-后端: 完成对接(在测试环境) [feature-\u003etest] 后端--\u003e\u003e-测试: 提测(在测试环境) [feature-\u003etest] 测试--\u003e\u003e+产品: 验收 (在预发布环境) [feature-\u003edevelop-\u003emaster] 产品-\u003e\u003e+上线: 上线(本地自测完毕) [master] sequenceDiagram 产品-\u003e\u003e+后端: 接需求 后端-\u003e\u003e+前端: 提交联调(本地自测完毕) [develop-\u003efeature) 前端--\u003e\u003e-后端: 完成对接(在测试环境) [feature-\u003etest] 后端--\u003e\u003e-测试: 提测(在测试环境) [feature-\u003etest] 测试--\u003e\u003e+产品: 验收 (在预发布环境) [feature-\u003edevelop-\u003emaster] 产品-\u003e\u003e+上线: 上线(本地自测完毕) [master] classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } ","date":"2021-05-26","objectID":"/post/hugo_support_mermaidjs/:3:1","tags":["hugo","theme","mermaid"],"title":"Hugo_support_mermaidjs","uri":"/post/hugo_support_mermaidjs/"},{"categories":["hugo","github","github action"],"content":"如何使用hugo快速创建一个github page 创建github项目(私有项目 + 公开项目) github.com/mmfei/mmfei.github.io.source; # 源项目 主要是用来生成网站项目 , 私有 github.com/mmfei/mmfei.github.io; # 网站项目 用来做 github page 的网站目录 # 安装hugo (mac环境下的安装方式 , 其他环境请看 gohugo.io) brew install hugo; # clone 私有项目 git clone github.com/mmfei/mmfei.github.io.source; cd mmfei.github.io.source; hugo new site .; hugo new post/first.md; # 往里面填充点内容 # 修改文件 config.tom cat config.tom \u003c\u003cEOT theme = \"beautifulhugo\" EOT # 修改文件 config.toml cat config.toml \u003c\u003cEOT baseURL = \"https://mmfei.github.io/\" languageCode = \"en-us\" title = \"木木飞\" theme = \"beautifulhugo\" EOT git add *; git commit -m \"commit_message\"; git push origin master; 创建本人在github的token(作为 GH_TOKEN 的值) https://github.com/settings/tokens 创建TOKEN (MY_GH_TOKEN) (需要赋予写仓库的权限,这个token是要给mmfei.github.io.source项目生成mmfei.github.io文件用的) https://github.com/mmfei/mmfei.github.io/settings/secrets/actions 设置page https://github.com/mmfei/mmfei.github.io/settings/pages 生成部署相关的公私钥 , 用来从 mmfei.github.io.source 发布 内容到 mmfei.github.io ssh-keygen -t rsa -b 4069 -C \"abc@abc.com\"; # 这里要替换成为你的邮箱地址 , 假设指定生成的文件为 ~/.ssh/id_rs_hugo_deploy.pub , ~/.ssh/id_rs_hugo_deploy ## 下面的 ACTIONS_DEPLOY_KEY 的值 /bin/cat ~/.ssh/id_rs_hugo_deploy.pub; ## 下面的 deploy key 的数值 /bin/cat ~/.ssh/id_rs_hugo_deploy; 设置 mmfei.github.io 项目 https://github.com/mmfei/mmfei.github.io/settings/keys 创建一个deploy key (值是上面的 ~/.ssh/id_rs_hugo_deploy 的内容), 需要写入权限 , 目的是给source项目推内容上来用 ","date":"2021-05-23","objectID":"/post/create_github_page_with_hugo/:0:1","tags":["hugo","github"],"title":"Create_github_page_with_hugo","uri":"/post/create_github_page_with_hugo/"},{"categories":["hugo","github","github action"],"content":"打开源目录的url,设置 ","date":"2021-05-23","objectID":"/post/create_github_page_with_hugo/:0:2","tags":["hugo","github"],"title":"Create_github_page_with_hugo","uri":"/post/create_github_page_with_hugo/"},{"categories":["hugo","github","github action"],"content":"设置 mmfei.github.io.source https://github.com/mmfei/mmfei.github.io.source/settings/secrets/actions 创建两个secret ACTIONS_DEPLOY_KEY 的值为上面生成的pub GH_TOKEN 的值为上面的MY_GH_TOKEN的值 ","date":"2021-05-23","objectID":"/post/create_github_page_with_hugo/:0:3","tags":["hugo","github"],"title":"Create_github_page_with_hugo","uri":"/post/create_github_page_with_hugo/"},{"categories":["hugo","github","github action"],"content":"设置构建脚本 cat \u003e\u003e ./.github/workflows/main.yml \u003c\u003cEOT name: Deploy Hugo Site to Github Pages on Master Branch on: push: branches: - master jobs: build-deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v1 # v2 does not have submodules option now # with: # submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"0.62.2\" # extended: true - name: Build run: | git submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo hugo --theme=beautifulhugo ls public - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # 这里的 ACTIONS_DEPLOY_KEY 则是上面设置 Private Key的变量名 github_token: ${{ secrets.GH_TOKEN }} external_repository: mmfei/mmfei.github.io publish_dir: \"./public\" keep_files: false # remove existing files publish_branch: master # deploying branch commit_message: ${{ github.event.head_commit.message }} user_name: \"mmfei\" user_email: \"abc@abc.com\" EOT git add ./.github/workflows/main.yml; git commit -m 'add deploy file'; git push origin master; ","date":"2021-05-23","objectID":"/post/create_github_page_with_hugo/:0:4","tags":["hugo","github"],"title":"Create_github_page_with_hugo","uri":"/post/create_github_page_with_hugo/"},{"categories":null,"content":"一直在广州的互联网老兵 ","date":"2021-05-22","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]